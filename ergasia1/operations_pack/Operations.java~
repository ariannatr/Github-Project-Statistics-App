package operations_pack;

import java.io.*;
import java.util.*;


public class Operations{
	Integer total_files;
	String name;
	public Operations(String filename)
	{
		total_files=0;
		name=new String(filename);	
	}

	public int get_files_num(File directory)
	{
		File contents[]=directory.listFiles();
      	Integer total_num=0;
      	for( File f : contents)
      	{
      		//System.out.println(f.getName());
      		if(f.isDirectory())
      			total_num+=get_files_num(f);
      		else
      			total_num++;
      	}
    	total_files=total_num;
      	return total_num;
	}

	public int get_lines(File directory,String dirname) throws IOException
	{
		File contents[]=directory.listFiles();
      	Integer total_num=0;
      	
      	for( File f : contents)
      	{
      		String execute=new String("wc -l ");
      		execute+=dirname+"/"+f.getName();
      		System.out.println(execute);
      		if(f.isDirectory())
      			total_num+=get_lines(f,dirname+"/"+f.getName());
      		else
      		{	
      			Process p=Runtime.getRuntime().exec(execute);
      			InputStreamReader isr= new InputStreamReader(p.getInputStream());
      			BufferedReader read=new BufferedReader(isr);
      			String result;
      			if((result=read.readLine())!=null)
      			{
      				String res[]=result.split("\\s");
      				//System.out.println("Exei grammes"+res[0]+"!!");
      				total_num+=Integer.parseInt(res[0]);
      			
      			}	
      			p.destroy();
      		}
      	}
      	return total_num;
	}

	public int get_branches(File directory) throws IOException
	{
		Integer total_num=0;
		Process p=Runtime.getRuntime().exec("git branch -a",null,directory);
      	InputStreamReader isr= new InputStreamReader(p.getInputStream());
      	BufferedReader read=new BufferedReader(isr);
      	String result;
      	while((result=read.readLine())!=null)
      	{
      		//System.out.println("Exei grammes"+res[0]+"!!");
      		total_num++;
      		
      	}	
      	p.destroy();
      	return total_num;
	}

	public int get_tags(File directory) throws IOException
	{
		Integer total_num=0;
		Process p=Runtime.getRuntime().exec("git tag ",null,directory);
      	InputStreamReader isr= new InputStreamReader(p.getInputStream());
      	BufferedReader read=new BufferedReader(isr);
      	String result;
      	while((result=read.readLine())!=null)
      	{
      		//System.out.println("Exei grammes"+res[0]+"!!");
      		total_num++;
      		
      	}	
      	p.destroy();
      	return total_num;
	}

	public int get_commiters(File directory) throws IOException
	{
		Integer total_num=0;
		Process p=Runtime.getRuntime().exec("git shortlog -sn HEAD",null,directory);
      	InputStreamReader isr= new InputStreamReader(p.getInputStream());
      	BufferedReader read=new BufferedReader(isr);
      	String result;
      	while((result=read.readLine())!=null)
      	{
      		System.out.println(result);
      		total_num++;
      		
      	}	
      	p.destroy();
      	return total_num;
	}

	public void get_full_branches(File directory) throws IOException
	{
		Process p=Runtime.getRuntime().exec("git branch -a ",null,directory);
		InputStreamReader isr= new InputStreamReader(p.getInputStream());
      		BufferedReader read=new BufferedReader(isr);
		String result;
		String parameter[]=new String[1];
      		while((result=read.readLine())!=null)
      		{
      			
			System.out.println(result);
			parameter[0]=result;
			//parameter[1]=null;
//			if(result.startsWith("*")||result.contains("->"))
//				continue;  
			Process p2=Runtime.getRuntime().exec("git log %s",parameter,directory);
			InputStreamReader isr2= new InputStreamReader(p2.getInputStream());
      			BufferedReader read2=new BufferedReader(isr2);
			String result2;
			while((result2=read2.readLine())!=null)
      			{
				System.out.println(result2);
      			}	
      			p2.destroy();
		}
		p.destroy();
      		return ;
	}
	

}



